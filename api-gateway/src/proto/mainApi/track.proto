syntax = "proto3";

package rhythmicity.main_api;

option go_package = "github.com/nichol20/rhythmicity/data-api/internal/pb";

import "common.proto";

message TrackSpotify {
    string id = 1;
    string title = 2;
    uint32 popularity = 3;
    uint32 durationMs = 4;
    repeated Image albumImages = 5;
}

message YoutubeThumbnails {
    optional Image default = 1;
    optional Image medium = 2;
    optional Image high = 3;
    optional Image standard = 4;
    optional Image maxres = 5;
}

message YoutubeStatistics {
    string viewCount = 1;
    string likeCount = 2;
    string favoriteCount = 3;
    string commentCount = 4;
}

message Youtube {
    string title = 1;
    uint32 durationMs = 2;
    string publishedAt = 3;
    YoutubeStatistics statistics = 4;
    YoutubeThumbnails thumbnails = 5;
}

message TrackMessage {
    string id = 1;
    repeated string genres = 2;
    repeated string styles = 3;
    bool explicit = 4;
    uint64 playCount = 5;
    TrackSpotify spotify = 6;
    Youtube youtube = 7;
    string lyrics = 8;
}

message PlaybackResponse {
    string youtubeId = 1;
}

message GetPopularTracksRequest {
    optional uint32 limit = 1;
    optional uint32 offset = 2;
}

message GetTracksByArtistIdRequest {
    string id = 1;
    optional uint32 limit = 2;
    optional uint32 offset = 3;
}

message GetTracksByAlbumIdRequest {
    string id = 1;
    optional uint32 limit = 2;
    optional uint32 offset = 3;
}

message MultipleTracks {
    repeated TrackMessage tracks = 1;
}

service Track {
    rpc Playback(RequestById) returns (PlaybackResponse){};
    rpc GetPopularTracks(GetPopularTracksRequest) returns (MultipleTracks){};
    rpc GetTrack(RequestById) returns (TrackMessage){};
    rpc GetSeveralTracks(RequestByIds) returns (MultipleTracks){};
    rpc GetTracksByArtistId(GetTracksByArtistIdRequest) returns (MultipleTracks){};
    rpc GetTracksByAlbumId(GetTracksByAlbumIdRequest) returns (MultipleTracks){};
}